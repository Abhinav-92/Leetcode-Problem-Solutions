struct node {
    bool operator()(const pair<int, string> &a, const pair<int, string> &b) const { 
        if(a.first==b.first) return a.second>b.second;
        return a.first<b.first;
    }
};

class FoodRatings {
private:
    map<string, string> cui;
    map<string, set<pair<int, string>, node>> mp;
    map<string, int> rate;
    
public:

    FoodRatings(vector<string>& foods, vector<string>& cuisines, vector<int>& ratings) {
        int n=foods.size();
        for(int i=0; i<n; i++){
            rate[foods[i]]=ratings[i];
            mp[cuisines[i]].insert({ratings[i], foods[i]});
            cui[foods[i]]=cuisines[i];
        }
    }
    
    void changeRating(string food, int newRating) {
        mp[cui[food]].erase({rate[food], food});
        mp[cui[food]].insert({newRating, food});
        rate[food]=newRating;
    }
    
    string highestRated(string cuisine) {
        return (*--mp[cuisine].end()).second;
    }
};
