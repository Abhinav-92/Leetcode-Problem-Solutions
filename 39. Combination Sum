class Solution {
public:
    void backtrack(vector<int>& nums, vector<int>& temp, vector<vector<int>>& result, int target, int sum, int idx){
        if(sum > target) return;
        else if(sum == target){
            result.push_back(temp);
            return;
        }
        
        for(int i = idx; i < nums.size(); i++){
            temp.push_back(nums[i]);
            backtrack(nums, temp, result, target, sum + nums[i], i);
            temp.pop_back();
        }
    }

    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> result;
        vector<int> temp;
        backtrack(candidates, temp, result, target, 0, 0);
        return result;
    }
};
